{"version":3,"sources":["spotifyLogo.png","playlists.js","tracks.js","index.js"],"names":["module","exports","Playlist","props","className","name","songCount","href","internUrl","externUrl","id","src","coverImageUrl","alt","Tracks","artist","length","TYPE","SpotifySearcher","useState","type","setType","limit","setLimit","mood","setMood","response1","setResponse","renders","renderPlaylist","handleChange","event","target","value","handleSubmit","axios","get","then","response","data","PLAYLISTS","TRACKS","playlists","playlist","push","key","console","log","Logo","onSubmit","onChange","onClick","tracks","track","renderTrack","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cce5c2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spotifyLogo.5e9a921c.png\";","import React from \"react\";\n\nexport function Playlist(props) {\n    return (\n        <div>\n            <p className=\"returnPlaylists\">\n                Playlist name: {props.name}\n                <br/>\n                <br/>\n                Number of songs: {props.songCount}\n                <br/>\n                <br/>\n                Open in Spotify: <a href={props.internUrl}>{props.internUrl}</a>\n                <br/>\n                <br/>\n                Open in browser: <a href={props.externUrl}>{props.externUrl}</a>\n                <br/>\n                <br/>\n            </p>\n            <img className=\"cover\" id=\"cover\" src={props.coverImageUrl} alt=\"Cover\"/>\n            <br/>\n            <br/>\n        </div>\n    )\n}","import React from \"react\";\n\nexport function Tracks(props) {\n    return (\n\n        <p className=\"returnTracks\">\n            Song name: {props.name}\n            <br/>\n            <br/>\n            Artist: {props.artist}\n            <br/>\n            <br/>\n            Length of song: {props.length}seconds\n            <br/>\n            <br/>\n            Open in Spotify: <a href={props.internUrl}>{props.internUrl}</a>\n            <br/>\n            <br/>\n            Open in browser: <a href={props.externUrl}>{props.externUrl}</a>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n        </p>\n    )\n}","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Logo from './spotifyLogo.png'\nimport axios from 'axios';\nimport {Playlist} from \"./playlists\";\nimport {Tracks} from \"./tracks\";\n\n\nconst TYPE = {\n    PLAYLISTS: \"playlists\",\n    TRACKS: \"tracks\"\n}\n\n\nfunction SpotifySearcher() {\n    const [type, setType] = useState(\"playlists\");\n    const [limit, setLimit] = useState(\"5\");\n    const [mood, setMood] = useState(\"sad\");\n    const [response1, setResponse] = useState(\"\");\n    let renders = renderPlaylist();\n\n    function handleChange(event) {\n\n        if (event.target.name === \"type\") {\n            setType(event.target.value)\n        }\n        if (event.target.name === \"limit\") {\n            setLimit(event.target.value)\n        }\n        if (event.target.name === \"mood\") {\n            setMood(event.target.value)\n        }\n    }\n\n    function handleSubmit(event) {\n\n        axios.get('/' + type + '?limit=' + limit + '&q=' + mood)\n            .then(function (response) {\n                setResponse(response.data);\n            })\n    }\n\n    const {PLAYLISTS, TRACKS} = TYPE;\n\n    function handleRender() {\n        if (type === PLAYLISTS) {\n            return renderPlaylist();\n        } else if (type === TRACKS) {\n             return renderTrack();\n        }else{\n            return(<p> You have to enter either \"playlists\" or \"tracks\"! </p>)\n        }\n\n        return null\n    }\n\n    function renderPlaylist() {\n        const playlists = []\n        for (const playlist of response1) {\n            playlists.push(<Playlist\n                key={playlist.name}\n                name={playlist.name}\n                songCount={playlist.songCount}\n                internUrl={playlist.internUrl}\n                externUrl={playlist.externUrl}\n                coverImageUrl={playlist.coverImageUrl}\n            />)\n        }\n        return playlists\n    }\n\n    function renderTrack() {\n        const tracks = []\n        for (const track of response1) {\n            tracks.push(<Tracks\n                key={track.name}\n                name={track.name}\n                artist={track.artist}\n                internUrl={track.internUrl}\n                externUrl={track.externUrl}\n                length={track.length}\n            />)\n        }\n        return tracks\n    }\n\n    //console.log(renderPlaylist());\n    console.log(renders);\n\n    return (\n\n        <div>\n            <h1> Spotify searcher </h1>\n            <img id=\"logo\" src={Logo} alt=\"spotify Logo\"/>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    How is your mood today? :\n                </label>\n                <input id=\"mood\" name=\"mood\" className=\"mood\" type=\"text\" value={mood} onChange={handleChange}/>\n                <label>\n                    <br/>\n                    What do you want to look for?\n                </label>\n                <input id=\"type\" name=\"type\" className=\"type\" type=\"text\" value={type} onChange={handleChange}/>\n                <br/>\n                <label>\n                    How many search results do you want to get? (not more than 50!):\n                </label>\n                <input id=\"limit\" name=\"limit\" className=\"limit\" type=\"text\" value={limit} onChange={handleChange}/>\n                <br/>\n                <input className=\"submitButton\" type=\"button\" value=\"Submit\" onClick={handleSubmit}/>\n            </form>\n            {handleRender()}\n        </div>\n    );\n}\n\nReactDOM.render(\n    <SpotifySearcher/>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}